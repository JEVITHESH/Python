import tkinter as tk
from tkinter import messagebox

class ElectricityBillCalculator:
    def __init__(self, root):
        self.root = root
        self.root.title("Electricity Bill Calculator")

        # Set background color
        self.root.configure(background="#e0f2f1")  # Light blue color
        
        # Define unit rate constants
        self.unit_rate = 7.5  # Rate per unit in INR

        # Create labels and entry widgets for login
        self.login_label = tk.Label(root, text="Login", bg="#e0f2f1", font=("Arial", 16))
        self.login_label.grid(row=0, column=0, columnspan=2, padx=10, pady=5)

        self.username_label = tk.Label(root, text="Username:", bg="#e0f2f1")
        self.username_label.grid(row=1, column=0, padx=10, pady=5)
        self.username_entry = tk.Entry(root)
        self.username_entry.grid(row=1, column=1, padx=10, pady=5)

        self.login_button = tk.Button(root, text="Login", command=self.login, bg="#b2dfdb")  # Light green color
        self.login_button.grid(row=2, column=0, columnspan=2, padx=10, pady=5)

        # Create labels and entry widgets for bill calculation
        self.units_label = tk.Label(root, text="Enter units consumed:", bg="#e0f2f1", font=("Arial", 14))
        self.units_label.grid(row=3, column=0, padx=10, pady=5, sticky="w")
        self.units_entry = tk.Entry(root)
        self.units_entry.grid(row=3, column=1, padx=10, pady=5)

        self.calculate_button = tk.Button(root, text="Calculate Bill", command=self.calculate_bill, bg="#b2dfdb")  # Light green color
        self.calculate_button.grid(row=4, column=0, columnspan=2, padx=10, pady=5)

        self.result_label = tk.Label(root, text="", bg="#e0f2f1", font=("Arial", 14))
        self.result_label.grid(row=5, column=0, columnspan=2, padx=10, pady=5)

        # Hide bill calculation widgets initially
        self.hide_bill_widgets()

    def hide_bill_widgets(self):
        self.units_label.grid_remove()
        self.units_entry.grid_remove()
        self.calculate_button.grid_remove()
        self.result_label.grid_remove()

    def show_bill_widgets(self):
        self.units_label.grid()
        self.units_entry.grid()
        self.calculate_button.grid()
        self.result_label.grid()

    def login(self):
        username = self.username_entry.get().strip()

        # Dummy check for demonstration purposes
        if username == "janani":
            self.show_bill_widgets()
        else:
            messagebox.showerror("Error", "Invalid username")

    def calculate_bill(self):
        try:
            units_consumed = float(self.units_entry.get())
            if units_consumed < 0:
                raise ValueError("Units consumed must be a non-negative number.")

            bill_amount = units_consumed * self.unit_rate
            self.result_label.config(text=f"Electricity bill amount: â‚¹{bill_amount:.2f}")
        except ValueError as e:
            self.result_label.config(text=str(e))

root = tk.Tk()
app = ElectricityBillCalculator(root)
root.mainloop()
